library(PRAWNS)
Startup()
?histogram_total_emissions_src
library(shiny); runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/Tempura.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
runApp('~/GitHub/Tempura/staging.R')
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='nathan303',
token='536C046184B328AA152011697728FFC1',
secret='<SECRET>')
rsconnect::setAccountInfo(name='nathan303', token='536C046184B328AA152011697728FFC1', secret='bdb8QmElbToWq2AD45ZigfXoscQM9mbCmaH2uTcN')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
shiny::runApp('~/GitHub/Tempura')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
runApp('~/GitHub/Tempura')
runApp('~/GitHub/Tempura')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
runApp('~/GitHub/Tempura')
library(PRAWNSdata)
length(pollutant_key)
nrow(pollutant_key)
assign(paste0("testthis"),2)
usethis::use_data(paste0("testthis"), overwrite = TRUE,compress="xz")
usethis::use_data(eval(paste0("testthis")), overwrite = TRUE,compress="xz")
usethis::use_data(name=testthis, overwrite = TRUE,compress="xz")
usethis::use_data(name=paste0("testthis"), overwrite = TRUE,compress="xz")
do.call("usethis::use_data",
list(as.name(paste0("testthis")),
overwrite = TRUE,compress="xz"))
do.call("use_data",
list(as.name(paste0("testthis")),
overwrite = TRUE,compress="xz"))
#clear up the variable
do.call("rm",
list(as.name(paste0("testthis")))
#close loop for cycling pollutants
}
#clear up the variable
do.call("rm",
list(as.name(paste0("testthis")))
)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") # ethnic group`
setwd("C:/Users/Nathan Gray/Documents/GitHub/Data-analysis-with-PRAWNS-demo")
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") # ethnic group`
View(edata)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
)
library(PRAWNS)
Startup()
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
)
prawn_path <- "NOx_emissions_in_2019_v0.13.3/Londonless/PRAWN.csv"
intermediate <- inner_join(data,edata,by=c("LSOA11CD"="geography code"))%>%
mutate(`Weighted emissions`= Total*flat_population,
`Weighted deprivation`=IMD*flat_population)
data <- read.csv(prawn_path,
row.names=1,
check.names=FALSE)
intermediate <- inner_join(data,edata,by=c("LSOA11CD"="geography code"))%>%
mutate(`Weighted emissions`= Total*flat_population,
`Weighted deprivation`=IMD*flat_population)
weighted_data <- intermediate %>%
group_by(`Ethnic group`) %>%
summarise(popsum=sum(flat_population),
emissions_sum=sum(`Weighted emissions`),
IMD_sum=sum(`Weighted deprivation`)) %>%
mutate(`Weighted emissions`=emissions_sum/popsum,
`Weighted deprivation`=IMD_sum/popsum) %>%
group_by(`Ethnic group`) %>%
mutate(tile =dplyr::ntile(x=`Weighted deprivation`,
n=10))
View(weighted_data)
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`)+
#geom_boxplot(aes(group=tile))+
geom_point()+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)
process_graph_saver(plot=last_plot,filename = "makeitbig.png",file_format = "agg_png",type = 3,scaling = 1)
process_graph_saver(plot=last_plot(),filename = "makeitbig.png",file_format = "agg_png",type = 3,scaling = 1)
process_graph_saver(plot=last_plot(),filename = "makeitbig.png",file_format = "agg_png",type = 3,scaling = 0.1)
process_graph_saver(plot=last_plot(),filename = "makeitbig.png",file_format = "agg_png",type = 3,scaling = 0.5)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(broad_group=case_when(
grep(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian"
))
View(edata)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(broad_group=case_when(
grep(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grep(pattern="Asian, Asian British",`Ethnic group`)==0~"test"
))
grep(pattern="Asian, Asian British",`edata$Ethnic group`)
grep(pattern="Asian, Asian British",edata$`Ethnic group`)
grep(pattern="Asian, Asian British",edata$`Ethnic group`,value=TRUE)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(broad_group=case_when(
grepl(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grepl(pattern="Asian, Asian British",`Ethnic group`)==0~"test"
))
View(edata)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(broad_group=case_when(
grepl(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grepl(pattern="Black, Black British",`Ethnic group`)==1~"Black",
grepl(pattern="Mixed or Multiple",`Ethnic group`)==1~"Mixed or Multiple",
grepl(pattern="Other ethnic group",`Ethnic group`)==1~"Other",
grepl(pattern="White:",`Ethnic group`)==1~"White",
))
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
)
intermediate <- inner_join(data,edata,by=c("LSOA11CD"="geography code"))%>%
mutate(`Weighted emissions`= Total*flat_population,
`Weighted deprivation`=IMD*flat_population)
weighted_data <- intermediate %>%
group_by(`Ethnic group`) %>%
summarise(popsum=sum(flat_population),
emissions_sum=sum(`Weighted emissions`),
IMD_sum=sum(`Weighted deprivation`)) %>%
mutate(`Weighted emissions`=emissions_sum/popsum,
`Weighted deprivation`=IMD_sum/popsum) %>%
group_by(`Ethnic group`)%>%
mutate(broad_group=case_when(
grepl(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grepl(pattern="Black, Black British",`Ethnic group`)==1~"Black",
grepl(pattern="Mixed or Multiple",`Ethnic group`)==1~"Mixed or Multiple",
grepl(pattern="Other ethnic group",`Ethnic group`)==1~"Other",
grepl(pattern="White:",`Ethnic group`)==1~"White",
))
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`,
shape=`broad_group`)+
#geom_boxplot(aes(group=tile))+
geom_point()+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)+
theme(legend.position="bottom")
View(weighted_data)
weighted_data <- intermediate %>%
group_by(`Ethnic group`) %>%
summarise(popsum=sum(flat_population),
emissions_sum=sum(`Weighted emissions`),
IMD_sum=sum(`Weighted deprivation`)) %>%
mutate(`Weighted emissions`=emissions_sum/popsum,
`Weighted deprivation`=IMD_sum/popsum) %>%
group_by(`Ethnic group`)%>%
mutate(broad_group=case_when(
grepl(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grepl(pattern="Black, Black British",`Ethnic group`)==1~"Black",
grepl(pattern="Mixed or Multiple",`Ethnic group`)==1~"Mixed or Multiple",
grepl(pattern="Other ethnic group",`Ethnic group`)==1~"Other",
grepl(pattern="White:",`Ethnic group`)==1~"White",
))
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`,
shape=`broad_group`)+
#geom_boxplot(aes(group=tile))+
geom_point()+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)+
theme(legend.position="bottom")
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`,
shape=broad_group)+
#geom_boxplot(aes(group=tile))+
geom_point()+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)+
theme(legend.position="bottom")
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`)+
#geom_boxplot(aes(group=tile))+
geom_point(aes(shape=broad_group))+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)+
theme(legend.position="bottom")
process_graph_saver(plot = last_plot(),filename = "Bettertrack.png",file_format = "agg_png",type = 3,scaling=0.5)
process_graph_saver(plot = last_plot(),filename = "Bettertrack.png",file_format = "agg_png",type = 3,scaling=0.8)
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(`Ethnic group`=str_sub(`Ethnic group`,start=14L,value=""))
edata <- read.csv("Data/LSOA_statistics/census2021-ts021-lsoa.csv",
check.names=FALSE,
sep="|") %>%
#Pivot the broadest subdivisions out
pivot_longer(
cols=-c(date,geography,`geography code`),
names_to = "Ethnic group",
values_to = "flat_population"
) %>%
mutate(`Ethnic group`=str_sub(`Ethnic group`,start=14L))
View(edata)
intermediate <- inner_join(data,edata,by=c("LSOA11CD"="geography code"))%>%
mutate(`Weighted emissions`= Total*flat_population,
`Weighted deprivation`=IMD*flat_population)
weighted_data <- intermediate %>%
group_by(`Ethnic group`) %>%
summarise(popsum=sum(flat_population),
emissions_sum=sum(`Weighted emissions`),
IMD_sum=sum(`Weighted deprivation`)) %>%
mutate(`Weighted emissions`=emissions_sum/popsum,
`Weighted deprivation`=IMD_sum/popsum) %>%
group_by(`Ethnic group`)%>%
mutate(broad_group=case_when(
grepl(pattern="Asian, Asian British",`Ethnic group`)==1~"Asian",
grepl(pattern="Black, Black British",`Ethnic group`)==1~"Black",
grepl(pattern="Mixed or Multiple",`Ethnic group`)==1~"Mixed or Multiple",
grepl(pattern="Other ethnic group",`Ethnic group`)==1~"Other",
grepl(pattern="White:",`Ethnic group`)==1~"White",
))
ggplot(data=weighted_data)+
aes(x=`Weighted deprivation`,
y=`Weighted emissions`,
colour=`Ethnic group`)+
#geom_boxplot(aes(group=tile))+
geom_point(aes(shape=broad_group))+
geom_smooth(method="lm",
formula=y~x)+
geom_smooth(data=data,
aes(x=IMD,
y=Total),
formula=y~x,
method="lm",
colour="pink")+
coord_cartesian(xlim=c(3.5,6),
ylim=c(10,24),
expand = FALSE)+
theme(legend.position="bottom")
