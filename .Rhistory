breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)
source_summary
#Make the data long to eneble grouping by source
long_stack <- active_stack %>%
pivot_longer(
cols=c("Agricultural","Domestic combustion",
"Industrial combustion","Industrial production",
"Other transport and mobile machinery","Road transport","Total"
,"Point sources"),
names_to = "Emission_source",
values_to = "NOx_emissions"
) %>%
tibble()
long_stack <- long_stack %>% mutate(NOx_emissions=replace_na(NOx_emissions,0))
long_stack$Emission_source <- factor(long_stack$Emission_source)
long_stack <- long_stack %>% mutate(Emission_source=fct_reorder(Emission_source,NOx_emissions,mean,.desc=TRUE))
london_free <- filter(long_stack,!TCITY15NM=="London")
temp = bind_rows(
long_stack %>%
mutate(justLondon = "With London"),
london_free %>%
mutate(justLondon = "Without London")
) %>%
select(decile = Index.of.Multiple.Deprivation..IMD..Decile..where.1.is.most.deprived.10..of.LSOAs.,
NOx_emissions,
justLondon,
Emission_source) %>%
group_by(justLondon,
Emission_source,
decile) %>%
summarise(Mean = mean(NOx_emissions, na.rm = T),
Median = median(NOx_emissions, na.rm =T )) %>%
pivot_longer(c(Mean, Median), names_to = "stat")
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)
source_summary
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)+
scale_y_continuous(expand=c(0,0.25))
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)+
scale_y_continuous(expand=c(0,0.25))
source_summary
#Make the data long to eneble grouping by source
long_stack <- active_stack %>%
pivot_longer(
cols=c("Domestic combustion",
"Industrial combustion","Industrial production",
"Other transport and mobile machinery","Road transport","Total"
,"Point sources"),
names_to = "Emission_source",
values_to = "NOx_emissions"
) %>%
tibble()
long_stack <- long_stack %>% mutate(NOx_emissions=replace_na(NOx_emissions,0))
long_stack$Emission_source <- factor(long_stack$Emission_source)
long_stack <- long_stack %>% mutate(Emission_source=fct_reorder(Emission_source,NOx_emissions,mean,.desc=TRUE))
london_free <- filter(long_stack,!TCITY15NM=="London")
temp = bind_rows(
long_stack %>%
mutate(justLondon = "With London"),
london_free %>%
mutate(justLondon = "Without London")
) %>%
select(decile = Index.of.Multiple.Deprivation..IMD..Decile..where.1.is.most.deprived.10..of.LSOAs.,
NOx_emissions,
justLondon,
Emission_source) %>%
group_by(justLondon,
Emission_source,
decile) %>%
summarise(Mean = mean(NOx_emissions, na.rm = T),
Median = median(NOx_emissions, na.rm =T )) %>%
pivot_longer(c(Mean, Median), names_to = "stat")
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)+
scale_y_continuous(expand=c(0,0.25))
source_summary
#Make the data long to eneble grouping by source
long_stack <- active_stack %>%
pivot_longer(
cols=c("Domestic combustion","Industrial production",
"Other transport and mobile machinery","Road transport","Total"
),
names_to = "Emission_source",
values_to = "NOx_emissions"
) %>%
tibble()
long_stack <- long_stack %>% mutate(NOx_emissions=replace_na(NOx_emissions,0))
long_stack$Emission_source <- factor(long_stack$Emission_source)
long_stack <- long_stack %>% mutate(Emission_source=fct_reorder(Emission_source,NOx_emissions,mean,.desc=TRUE))
london_free <- filter(long_stack,!TCITY15NM=="London")
temp = bind_rows(
long_stack %>%
mutate(justLondon = "With London"),
london_free %>%
mutate(justLondon = "Without London")
) %>%
select(decile = Index.of.Multiple.Deprivation..IMD..Decile..where.1.is.most.deprived.10..of.LSOAs.,
NOx_emissions,
justLondon,
Emission_source) %>%
group_by(justLondon,
Emission_source,
decile) %>%
summarise(Mean = mean(NOx_emissions, na.rm = T),
Median = median(NOx_emissions, na.rm =T )) %>%
pivot_longer(c(Mean, Median), names_to = "stat")
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)+
scale_y_continuous(expand=c(0,0.25))
source_summary
#Make the data long to eneble grouping by source
long_stack <- active_stack %>%
pivot_longer(
cols=c("Domestic combustion",
"Other transport and mobile machinery","Road transport","Total"
),
names_to = "Emission_source",
values_to = "NOx_emissions"
) %>%
tibble()
long_stack <- long_stack %>% mutate(NOx_emissions=replace_na(NOx_emissions,0))
long_stack$Emission_source <- factor(long_stack$Emission_source)
long_stack <- long_stack %>% mutate(Emission_source=fct_reorder(Emission_source,NOx_emissions,mean,.desc=TRUE))
london_free <- filter(long_stack,!TCITY15NM=="London")
temp = bind_rows(
long_stack %>%
mutate(justLondon = "With London"),
london_free %>%
mutate(justLondon = "Without London")
) %>%
select(decile = Index.of.Multiple.Deprivation..IMD..Decile..where.1.is.most.deprived.10..of.LSOAs.,
NOx_emissions,
justLondon,
Emission_source) %>%
group_by(justLondon,
Emission_source,
decile) %>%
summarise(Mean = mean(NOx_emissions, na.rm = T),
Median = median(NOx_emissions, na.rm =T )) %>%
pivot_longer(c(Mean, Median), names_to = "stat")
source_summary <- ggplot(temp)+
geom_smooth(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
method = "lm",
se=FALSE,
size=1)+
geom_line(aes(decile,
value,
colour = Emission_source,
linetype = justLondon,
),
size=0.5)+
facet_wrap(~stat)+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019",
linetype="Dataset",
colour="Emission source")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)+
scale_y_continuous(expand=c(0,0.25))
source_summary
ggsave(filename="Outputs/Plots/NOx/NOX_source_summary_2019.png",
plot=source_summary,
units = "mm",height = 339,width=480,
device="png")
source("~/GitHub/Pollutant-processing-hub/Scripts/Startup.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Startup.R", encoding = 'UTF-8')
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
source("~/GitHub/Pollutant-processing-hub/Scripts/Startup.R", encoding = 'UTF-8')
source("~/GitHub/Pollutant-processing-hub/Scripts/Analysis/Source breakdown.R")
long_data <- pivot_longer(measure_comp,
cols=c("Income","Employment","Health","Education","Crime","Housing","Living.environment","Access"),
names_to = "Deprivation domain",
values_to = "Percentage") %>%
rename(Measure=X.U.FEFF.Index.of.deprivation) %>%
mutate(`Deprivation domain`=fct_reorder(`Deprivation domain`,Percentage,mean,.desc=TRUE))
library(PRAWNS)
Startup()
setwd("~/Github/Fuse-data")
measure_comp <- read.csv("Data/deprivation_comparison.csv",encoding = "UTF-8") %>% tibble()
long_data <- pivot_longer(measure_comp,
cols=c("Income","Employment","Health","Education","Crime","Housing","Living.environment","Access"),
names_to = "Deprivation domain",
values_to = "Percentage") %>%
rename(Measure=X.U.FEFF.Index.of.deprivation) %>%
mutate(`Deprivation domain`=fct_reorder(`Deprivation domain`,Percentage,mean,.desc=TRUE))
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(position = "dodge")
ggsave(filename= paste0("~/Github/Fuse-data/Deprivation measure comparison.svg"),
plot=last_plot(),
device="svg",
width = 50,
height = 30,
units = "cm"
)
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(position = position_dodge(width=1))
ggsave(filename= paste0("~/Github/Fuse-data/Deprivation measure comparison.svg"),
plot=last_plot(),
device="svg",
width = 50,
height = 30,
units = "cm"
)
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(width=1,position = "dodge")
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(width=2,position = "dodge")
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(position = "dodge")
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(width=0.6,position = "dodge")
ggplot(data=long_data)+aes(x=`Deprivation domain`,y=Percentage, fill=Measure)+geom_col(width=0.7,position = "dodge")
ggsave(filename= paste0("~/Github/Fuse-data/Deprivation measure comparison.png"),
plot=last_plot(),
device="png",
width = 50,
height = 30,
units = "cm"
)
ggsave(filename= paste0("~/Github/Fuse-data/Deprivation measure comparison.png"),
plot=last_plot(),
device="png",
width = 25,
height = 15,
units = "cm"
)
library(ggplot2)
library(tidyverse)
setwd("~/R/tester")
#read in the data
data_to_plot <- read.csv("testing.csv")
ggplot(data=data_to_plot,
#set the variables that'll be used
aes(x=ret1,
colour=compound)+
geom_point()
ggplot(data=data_to_plot,
#set the variables that'll be used
aes(x=ret1,
y=ret2,
colour=compound)+
geom_point()
)
library(tidyverse)
#read in the data
data_to_plot <- read.csv("testing.csv")
ggplot(data=data_to_plot,
#set the variables that'll be used
aes(x=ret1,
y=ret2,
colour=compound))+
geom_point()
ggplot(data=data_to_plot,
#set the variables that'll be used
aes(x=ret1,
y=ret2,
colour=compound))+
geom_point(size=2)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
#The startup section
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
Startup()
city <- "Bristol"
#Process PM2.5
bulk_processor(raster_path = "Data/NOx_rasters_2020",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process PM2.5
bulk_processor(raster_path = "Data/NOx_rasters_2020",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
library(PRAWNS)
Startup()
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
data <- read.csv("NOx_emissions_in_2020_v0.8.0/PRAWN.csv")
ggplot(data=data$Total)+geom_histogram()
ggplot(data=data)+aes(x=Total)+geom_histogram()
ggplot(data=data)+
aes(x=Total)+
geom_histogram()+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 20)+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 10)+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 10)+
coord_cartesian(xlim=c(0,120),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
coord_cartesian(xlim=c(0,120),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
coord_cartesian(xlim=c(0,120))
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = FALSE)+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(-5,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
data$Total<=0
sum(data$Total<=0)
sum(data$Total<=5)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5,boundary=0)+
scale_x_continuous(limits = c(-5,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/nox distribution.R")
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
?seq()
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
facet_wrap(facets = IMD)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
facet_wrap(~IMD)
