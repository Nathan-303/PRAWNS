geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
geom_line(stat="summary",color="blue",group=IMD)+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)#+
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+
coord_cartesian(xlim = c(1, 10),
ylim= c(0,50))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
geom_line(data=filtered_data %>% group_by(IMD),
x=IMD,
y= Total
stat="summary",color="blue")+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)#+
City_profile
class(filtered_data$IMD)
city_facet_nox <- ggplot(filtered_data)+
aes(x=Index.of.Multiple.Deprivation..IMD..Decile..where.1.is.most.deprived.10..of.LSOAs.,
y=Total)+
geom_line(stat="summary")+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE)+
geom_quantile(quantiles=0.5,linetype=2)+
stat_summary(fun.y=median,geom="line",size=0.5,linetype=3)+
coord_cartesian(xlim = c(1, 10),ylim=c(0,NA),expand=c(0,0))+
facet_wrap(~Area,scales="free_y")+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)
city_facet_nox
city_facet_nox <- ggplot(filtered_data)+
aes(x=IMD,
y=Total)+
geom_line(stat="summary")+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE)+
geom_quantile(quantiles=0.5,linetype=2)+
stat_summary(fun.y=median,geom="line",size=0.5,linetype=3)+
coord_cartesian(xlim = c(1, 10),ylim=c(0,NA),expand=c(0,0))+
facet_wrap(~Area,scales="free_y")+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)
city_facet_nox
city_facet_nox <- ggplot(filtered_data)+
aes(x=IMD,
y=Total)+
#geom_line(stat="summary")+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE)+
geom_quantile(quantiles=0.5,linetype=2)+
stat_summary(fun.y=median,geom="line",size=0.5,linetype=3)+
coord_cartesian(xlim = c(1, 10),ylim=c(0,NA),expand=c(0,0))+
facet_wrap(~Area,scales="free_y")+
labs(x="IMD decile where 10 is least deprived",
y="Average NOx emissions/tonnes km^2",
title="NOx emissions by LSOA 2019")+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE)
city_facet_nox
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
coord_cartesian(xlim = c(1, 10),
ylim= c(0,50))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
geom_line(stat="summary",color="blue")#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
coord_cartesian(xlim = c(1, 10),
ylim= c(0,50))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")#+
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
coord_cartesian(xlim = c(1, 10))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
coord_cartesian(xlim = c(1, 10))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
coord_cartesian(xlim = c(1, 10))+
# scale_x_continuous(
#   breaks=c(1:10),
#   expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
# coord_cartesian(xlim = c(1, 10))+
# scale_x_continuous(
#   breaks=c(1:10),
#   expand = expansion(mult=0,add=0))+
scale_y_discrete(
expand = expansion(mult=0,add=0))#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
# coord_cartesian(xlim = c(1, 10))+
# scale_x_continuous(
#   breaks=c(1:10),
#   expand = expansion(mult=0,add=0))+
# scale_y_discrete(
#   expand = expansion(mult=0,add=0))#+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
# coord_cartesian(xlim = c(1, 10))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
# scale_y_discrete(
#   expand = expansion(mult=0,add=0))#+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)#+
City_profile
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+geom_line(stat="summary",color="blue")+
# coord_cartesian(xlim = c(1, 10))+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0))+
# scale_y_discrete(
#   expand = expansion(mult=0,add=0))#+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=TRUE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#+
#Plot a line passing through the median at each decile
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)+
#An extra line showing the UK average for comparison purposes
geom_line(data=read.csv(prawn_path),stat="summary" , aes(
x=IMD,
y=Total,colour='UK Average'),
show.legend = FALSE
)
City_profile
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/Decile_vs_emission_by_variable.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
library(roxygen2)
library(devtools)
document()
library(PRAWNS)
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
library(tidyr)
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
#' @export
#Load in all ther packages as a jerry rigged fix to figuring out namespace
startup <- function(){
library(raster)
library(sf)
library(tidyverse)
library(terra)
library(exactextractr)
library(rlang)
library(broom)
library(ggpubr)
library(colorspace)
library(viridis)
library(googledrive)
library(stars)
library(devtools)
library(roxygen2)
}
#' @export
#Load in all ther packages as a jerry rigged fix to figuring out namespace
Startup <- function(){
library(raster)
library(sf)
library(tidyverse)
library(terra)
library(exactextractr)
library(rlang)
library(broom)
library(ggpubr)
library(colorspace)
library(viridis)
library(googledrive)
library(stars)
library(devtools)
library(roxygen2)
}
Startup()
