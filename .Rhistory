source("~/GitHub/PRAWNS/R/area_summary.R")
source("~/GitHub/PRAWNS/R/area_summary.R")
#' @keywords heatmap, graph,
#' @export
#' @examples
#' area_summary()
#'
area_summary <- function(prawn_path,
shape_path,
targets,
pollutant,
output_path=FALSE){}
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
city_facets
#Reads in the demographic and pollution data
raw_data <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>% tibble()
#Reads in the shapefiles
raw_shapefile <- st_read(shape_path)
shapefile_path <-  "Data/2011_LSOA_shapefile_20m_generalised"
shape_path <-  "Data/2011_LSOA_shapefile_20m_generalised"
#Reads in the shapefiles
raw_shapefile <- st_read(shape_path)
source("~/GitHub/PRAWNS/R/faceted_plot.R")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
faceted_plot()
prawn_path <- "PM2.5_emissions_in_2019_v0.3.0/PRAWN.csv"
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
city_facets
source("~/GitHub/PRAWNS/R/faceted_plot.R")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
city_facets
warnings()
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
city_facets
source("~/GitHub/PRAWNS/R/RUC_IMD.R")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
RUC_breakdown
source("~/GitHub/PRAWNS/R/faceted_sources.R")
#Make and save a graph where the sources are all faceted
source_facets <- faceted_sources(prawn_path = prawn_path,
pollutant=pollutant)
source_facets
source("~/GitHub/PRAWNS/R/faceted_sources.R")
#Make and save a graph where the sources are all faceted
source_facets <- faceted_sources(prawn_path = prawn_path,
pollutant=pollutant)
source_facets
#Plot the average pollutant vs average IMD grouped by county/ua
avg_imd_pol <- area_IMD_vs_pol(prawn_path=prawn_path,
pollutant = pollutant,
area_type = "Area")
avg_imd_pol
setwd("~/Github/PRAWNS")
document()
document()
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
library(tidyverse)
document()
source("~/GitHub/PRAWNS/R/area_summary.R")
document()
document()
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
)
iteration <- "0.4.0"
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
)
source("~/GitHub/PRAWNS/R/bulk_processor.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
)
setwd("~/Github/PRAWNS")
document()
document()
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
)
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
)
warnings()
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
#The startup section
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
Startup()
city <- "High wycombe"
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- as.character(packageVersion("PRAWNS"))
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
raster_path <-  "Data/pm2.5_rasters_2019"
shapefile_path <- "Data/2011_LSOA_shapefile_20m_generalised"
data_folder <- "Data/LSOA_statistics"
pollutant_data_name <- "pm2_5"
year <- 2019
pollutant <- "PM2.5"
iteration<-"0.4.3"
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#The crude path is used to output the unrefined prawn
crude_path <- paste0(proc_tag,"/crude_PRAWN.csv")
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
ggsave(filename= paste0(proc_tag,"/",pollutant," source summary.png"),
plot=source_breakdown,
device="png")
#Make and save a graph where the sources are all faceted
source_facets <- faceted_sources(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted sources.png"),
plot=source_facets,
device="png")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC breakdown.png"),
plot=RUC_breakdown[[1]],
device="png")
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC populationbreakdown.png"),
plot=RUC_breakdown[[2]],
device="png")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by city.png"),
plot=city_facets,
device="png")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
prawn_path
pollutant
source("~/GitHub/PRAWNS/R/faceted_plot.R")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by city.png"),
plot=city_facets,
device="png")
#Facet the mean and median pollutant levels by county/unitary authority
area_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
#Plot the average pollutant vs average IMD grouped by county/ua
avg_imd_pol <- area_IMD_vs_pol(prawn_path=prawn_path,
pollutant = pollutant,
area_type = "Area")
ggsave(filename= paste0(proc_tag,"/",pollutant," average vs average IMD by area.png"),
plot=avg_imd_pol,
device="png")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
write.csv(x=numbers,
file=paste0(proc_tag,"/difference between deciles.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
ggsave(filename= paste0(proc_tag,"/pie chart of how ",pollutant," sources contribute to the inequality gradient.png"),
plot=pie,
device="png")
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
source("~/GitHub/PRAWNS/R/faceted_plot.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
select
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
#This loop creates three different outputs using different data: the base data, the data without london and the data with na values replaced with 0
for ( index in c(1:3)){
#Create the folder for the results using the raw data
if (index==1){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#The crude path is used to output the unrefined prawn
crude_path <- paste0(proc_tag,"/crude_PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#create the base prawn for this function, it will also be used by iterations 2 and 3 but filtered
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
#output the raw form of the prawn as well so that it can be examined if needed
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = crude_path,
is_raw = TRUE)
data_summary <- data_flagger(crude_path)
write.csv(x =  data_summary,
file = paste0(proc_tag,"/data_summary.csv")
)
shape_test <- shapefile_checker(shapefile_path)
ggsave(filename= paste0(proc_tag,"/shapefile_test"),
plot=shape_test,
device="png")
}
#create the results without London,
if (index==2){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration,"/Londonless")
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#Create the filtered data without London and save it at prawn_path
londonless_prawn <- read.csv(raw_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
filter(TCITY15NM!="London")
#Write the filtered prawn
write.csv(x = londonless_prawn,
file=prawn_path)
}
if (index==3){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration,"/na is 0")
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#Create the filtered data without London and save it at prawn_path
na_0_prawn <- read.csv(raw_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
replace_na(list("Agricultural"=0,"Domestic combustion"=0,"Energy production"=0,
"Industrial combustion"=0,"Industrial production"=0,"Natural"=0,
"Offshore"=0,"Other transport and mobile machinery"=0,"Road transport"=0,"Solvents"=0,"Total"=0
,"Total_no_points"=0,"Waste treatment and disposal"=0))
write.csv(x = na_0_prawn,
file=prawn_path)
}
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
ggsave(filename= paste0(proc_tag,"/",pollutant," source summary.png"),
plot=source_breakdown,
device="png")
#Make and save a graph where the sources are all faceted
source_facets <- faceted_sources(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted sources.png"),
plot=source_facets,
device="png")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC breakdown.png"),
plot=RUC_breakdown[[1]],
device="png")
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC populationbreakdown.png"),
plot=RUC_breakdown[[2]],
device="png")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by city.png"),
plot=city_facets,
device="png")
#Facet the mean and median pollutant levels by county/unitary authority
area_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by area.png"),
plot=area_facets,
device="png")
#Plot the average pollutant vs average IMD grouped by county/ua
avg_imd_pol <- area_IMD_vs_pol(prawn_path=prawn_path,
pollutant = pollutant,
area_type = "Area")
ggsave(filename= paste0(proc_tag,"/",pollutant," average vs average IMD by area.png"),
plot=avg_imd_pol,
device="png")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
write.csv(x=numbers,
file=paste0(proc_tag,"/difference between deciles.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
ggsave(filename= paste0(proc_tag,"/pie chart of how ",pollutant," sources contribute to the inequality gradient.png"),
plot=pie,
device="png")
#close the for loop
}
#output the raw form of the prawn as well so that it can be examined if needed
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = crude_path,
is_raw = TRUE)
data_summary <- data_flagger(crude_path)
write.csv(x =  data_summary,
file = paste0(proc_tag,"/data_summary.csv")
)
data_summary <- data_flagger(crude_path) %>% tibble()
source("~/GitHub/PRAWNS/R/data_flagger.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
data_summary <- data_flagger(crude_path) %>% tibble()
write.csv(x =  data_summary,
file = paste0(proc_tag,"/data_summary.csv")
)
source("~/GitHub/PRAWNS/R/bulk_processor.R")
source("~/GitHub/PRAWNS/R/data_flagger.R")
data_summary <- data_flagger(crude_path) %>% tibble()
write.csv(x =  data_summary,
file = paste0(proc_tag,"/data_summary.csv")
)
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
detach("package:PRAWNS", unload = TRUE)
setwd("~/Github/PRAWNS")
document()
document()
detach("package:PRAWNS", unload = TRUE)
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
csv_raster <- read.csv(file="Data/pm2.5test",
row.names=1,
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",
row.names=1,
check.names=FALSE) %>% tibble()
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
csv_raster <- read.csv(file="Data/pm2.5test.csv",
row.names=1,
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",header = 5,
row.names=1,
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",header = 6,
row.names=1,
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",skip = 5
row.names=1,
check.names=FALSE) %>% tibble()
csv_raster <- read.csv(file="Data/pm2.5test.csv",skip = 5,
row.names=1,
check.names=FALSE) %>% tibble()
raster <- terra::rast(type="xyz")
View(csv_raster)
rasterFromXYZ(csv_raster)
rasterFromXYZ(csv_raster,crs="OSGB")
hmm <- rasterFromXYZ(csv_raster,crs="OSGB")
aha <- ggplot(data=hmm,
aes(x=x,
y=y,
PM2.5=pm252020g))
aha <- ggplot()+geom_raster(data=hmm,
aes(x=x,
y=y,
PM2.5=pm252020g))
plot(hmm)
hrrrm <- as.raster(hmm#)
hrrrm <- as.raster(hmm)
class(hrrm)
class(hrrrm)
hrrrm <- rast(hmm)
class(hrrrm)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/0_7_1 tests.R")
source("~/GitHub/PRAWNS/R/faceted_plot.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
detach("package:PRAWNS", unload = TRUE)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
csv_raster <- read.csv(file="Data/pm2.5test.csv",skip = 5,
row.names=1,
check.names=FALSE) %>% tibble()
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
csv_raster <- read.csv(file="Data/pm2.5test.csv",skip = 5,
row.names=1,
check.names=FALSE) %>% tibble()
base_raster <- rasterFromXYZ(csv_raster,crs="OSGB")
output <- rast(base_raster)
setwd("~/Github/PRAWNS")
document()
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
