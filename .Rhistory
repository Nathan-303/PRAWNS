pollutant="NOx")
library(tidyr)
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
#' @export
#Load in all ther packages as a jerry rigged fix to figuring out namespace
startup <- function(){
library(raster)
library(sf)
library(tidyverse)
library(terra)
library(exactextractr)
library(rlang)
library(broom)
library(ggpubr)
library(colorspace)
library(viridis)
library(googledrive)
library(stars)
library(devtools)
library(roxygen2)
}
#' @export
#Load in all ther packages as a jerry rigged fix to figuring out namespace
Startup <- function(){
library(raster)
library(sf)
library(tidyverse)
library(terra)
library(exactextractr)
library(rlang)
library(broom)
library(ggpubr)
library(colorspace)
library(viridis)
library(googledrive)
library(stars)
library(devtools)
library(roxygen2)
}
Startup()
library(PRAWNS)
setwd("~/GitHub/PRAWNS")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts")
#call the startup function to load in all the packages needed
startup()
#call the startup function to load in all the packages needed
Startup()
setwd("~/GitHub/PRAWNS")
library(devtools)
setwd("~/GitHub/PRAWNS")
document()
install("PRAWNS")
library("PRAWNS")
library(PRAWNS)
setwd("~/GitHub")
library(PRAWNS)
install_local("~/GitHub/PRAWNS")
library(PRAWNS)
library("PRAWNS")
library(raster)
library(PRAWNS)
library(PRAWNS)
Startup()
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_1_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
prawn_path <-  "Outputs/create_prawns_1_0_0_test.csv"
source("~/GitHub/PRAWNS/R/Decile_vs_emission_by_variable.R")
city_sources <- Decile_vs_emission_by_variable(
active_stack = long_chunk,
chosen_decile = IMD,
chosen_grouping = Emission_source,
xaxis = "IMD Decile",
yaxis = "NOx emissions",
title = paste0("Source breakdown for ",targets),
chosen_variable = emissions,
Pollutant = "NOx"
)+
geom_quantile(quantiles=0.5,linetype=2)
#Create a pivoted copy of the data so the sources can be graphed as separate variables
long_chunk <- filtered_data %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
targets <- "Leeds"
#Takes the subset of the data where the city name matches the targets
filtered_data <- filter(raw_data,TCITY15NM %in% targets)
#Reads in the demographic and pollution data
raw_data <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>% tibble()
#Takes the subset of the data where the city name matches the targets
filtered_data <- filter(raw_data,TCITY15NM %in% targets)
#Create a pivoted copy of the data so the sources can be graphed as separate variables
long_chunk <- filtered_data %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
long_chunk$Emission_source <- factor(long_chunk$Emission_source)
long_chunk <- long_chunk %>% mutate(Emission_source=fct_reorder(Emission_source,emissions,mean,.desc=TRUE))
city_sources <- Decile_vs_emission_by_variable(
active_stack = long_chunk,
chosen_decile = IMD,
chosen_grouping = Emission_source,
xaxis = "IMD Decile",
yaxis = "NOx emissions",
title = paste0("Source breakdown for ",targets),
chosen_variable = emissions,
Pollutant = "NOx"
)+
geom_quantile(quantiles=0.5,linetype=2)
city_sources
if(UK_Average==TRUE){
#New section to add the extra line
active_graph <- active_graph + geom_smooth(data=read.csv("Outputs/Output_data/NOx/NOxsuperstack2019.csv")
, aes(
x={{chosen_decile}},
y={{chosen_variable}},
method="lm",
#formula={{chosen_variable}}~{{chosen_decile}},
se=FALSE,
show.legend = FALSE,
aes(linetype="UK average")))+
scale_linetype_manual("UK average"=1,"Mean"=2, "Median"=3)
}
source("~/GitHub/PRAWNS/R/Decile_vs_emission_by_variable.R")
city_sources <- Decile_vs_emission_by_variable(
active_stack = long_chunk,
chosen_decile = IMD,
chosen_grouping = Emission_source,
xaxis = "IMD Decile",
yaxis = "NOx emissions",
title = paste0("Source breakdown for ",targets),
chosen_variable = emissions,
Pollutant = "NOx"
)+
geom_quantile(quantiles=0.5,linetype=2)
city_sources
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
Decile_vs_emission_by_variable <- function(active_stack,chosen_decile,chosen_variable,chosen_grouping,title,xaxis,yaxis,UK_Average=FALSE,Pollutant="Chaos",Custom_scale=NULL,archive=FALSE){
active_graph <- ggplot(data=active_stack)+
aes(x={{chosen_decile}},
y={{chosen_variable}},
colour={{chosen_grouping}}
)+
scale_color_viridis(option="turbo", discrete = TRUE)+
#coord_cartesian(xlim = c(1, 10),ylim=Custom_scale)+
scale_x_continuous(
breaks=c(1:10),
expand = expansion(mult=0,add=0),
minor_breaks = FALSE
)+
labs(x=xaxis,
y=yaxis,
title=title
)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))
if(UK_Average==TRUE){
#New section to add the extra line
active_graph <- active_graph + geom_smooth(data=read.csv("Outputs/Output_data/NOx/NOxsuperstack2019.csv")
, aes(
x={{chosen_decile}},
y={{chosen_variable}},
method="lm",
#formula={{chosen_variable}}~{{chosen_decile}},
se=FALSE,
show.legend = FALSE,
aes(linetype="UK average")))+
scale_linetype_manual("UK average"=1,"Mean"=2, "Median"=3)
}
if(archive==TRUE){
ggsave(filename=paste0("Outputs/Plots/",Pollutant,"/",title,".svg"),
plot=last_plot(),
device="svg")
(chicken <- drive_put(
media=paste0("Outputs/Plots/",Pollutant,"/",title,".svg"),
path=paste0("Nathan_inequality_plots/Emissions/",Pollutant,"/",title,".svg"),
type="svg"
))
}
active_graph
}
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
#This is where the largest graph (mean/median and UK average starts)
#Create a graph showing the relationship between NOx and decile within the chosen area
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+
scale_x_continuous(
breaks=c(1:10),
minor_breaks = FALSE,
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=FALSE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
geom_line(stat="summary",aes(color='Mean'))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(color='Median'))+
#Plot a regression line for the whole UK for comparison
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)+
#An extra line showing the UK average at each decile for comparison purposes
geom_line(data=read.csv(prawn_path),stat="summary" , aes(
x=IMD,
y=Total,colour='UK Average'),
show.legend = FALSE
)+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))
pollutant <- "NOx"
#This is where the largest graph (mean/median and UK average starts)
#Create a graph showing the relationship between NOx and decile within the chosen area
City_profile <- ggplot(data=filtered_data)+
aes(x=IMD,
y=Total)+
scale_x_continuous(
breaks=c(1:10),
minor_breaks = FALSE,
expand = expansion(mult=0,add=0))+
labs(x="IMD decile",
y=paste0(pollutant," emissions"),
title=paste0(targets," NOx emission"))+
#Plot the line of best fit for the mean
geom_smooth(method="lm",
formula=y~x,
se=FALSE,
show.legend=FALSE,
aes(color='Mean'))+
#Plot a line passing through the mean at each decile
geom_line(stat="summary",aes(color='Mean'))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(color='Median'),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(color='Median'))+
#Plot a regression line for the whole UK for comparison
geom_smooth(data=read.csv(prawn_path)
, aes(
x=IMD,
y=Total,
color='UK Average'),
method="lm",
formula=y~x,
se=FALSE,
show.legend = FALSE)+
#An extra line showing the UK average at each decile for comparison purposes
geom_line(data=read.csv(prawn_path),stat="summary" , aes(
x=IMD,
y=Total,colour='UK Average'),
show.legend = FALSE
)+
scale_colour_manual(name="Line type",
breaks = c('Mean','Median','UK Average'),
values=c('Mean'='blue','Median'='red','UK Average'='black'))
City_profile
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
source("~/GitHub/PRAWNS/R/city_summary.R")
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "London",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
city_summary(prawn_path = "Outputs/create_prawns_1_0_0_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "Leeds",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="NOx"
)
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
city_summary(prawn_path = "Outputs/create_prawns_2_0_0pm2.5_test.csv",
shape_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = "Leeds",
output_path= "Outputs/geographic_summary1_0_0_test",
pollutant="PM2.5"
)
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
rlang::last_error()
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
#Reads the demographic information about the LSOAs, binds them by LSOA code so the FID is incorporated
LSOA_demographics <- read.csv("Data/LSOA_statistics/2019_LSOA_Stats.csv") %>%
tibble() %>%
rename(LSOA11CD=LSOA.code..2011.) %>%
inner_join(city_data,by="LSOA11CD")
rural_urban <- read.csv("Data/LSOA_statistics/LSOA_urban_rural.csv")
city_data <- read.csv("Data/LSOA_statistics/city lookup 2011.csv") %>%
tibble()
#Renames a column to avoid a special character that makes things go wrong
colnames(city_data)[1] <- "LSOA11CD"
#Reads the demographic information about the LSOAs, binds them by LSOA code so the FID is incorporated
LSOA_demographics <- read.csv("Data/LSOA_statistics/2019_LSOA_Stats.csv") %>%
tibble() %>%
rename(LSOA11CD=LSOA.code..2011.) %>%
inner_join(city_data,by="LSOA11CD")
bleh <- LSOA_demographics%>%
inner_join(rural_urban,by=c("LSOA11NM"="LSOA11NM"))
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
#Read in the data with NA valuse changed to unclassified, raising red flags if necessary
active_stack <-read.csv(prawn_path) %>%
replace_na(list(RUC11="Unclassified"))
#Make the data long to enable grouping by source
temp <- active_stack %>%
tibble() %>%
select(decile = IMD,
Emissions=Total,
Classification=RUC11) %>%
group_by(Classification)
RUC_summary <- ggplot(temp)+
aes(x=decile,
y=Emissions,
colour=Classification)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))
RUC_summary
prawn_path
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
prawn_path <-  "Outputs/create_prawns_2_0_0_test.csv"
#Read in the data with NA valuse changed to unclassified, raising red flags if necessary
active_stack <-read.csv(prawn_path) %>%
replace_na(list(RUC11="Unclassified"))
#Make the data long to enable grouping by source
temp <- active_stack %>%
tibble() %>%
select(decile = IMD,
Emissions=Total,
Classification=RUC11) %>%
group_by(Classification)
RUC_summary <- ggplot(temp)+
aes(x=decile,
y=Emissions,
colour=Classification)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))
RUC_summary
Area_population <- ggplot(data=active_stack)+
aes(x=RUC11,fill=RUC11 )+
geom_bar()+
labs(
title="population distribution")+
theme(
axis.text.x = element_blank(),
axis.ticks = element_blank())
Area_population
