shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
create_prawns(raster_path= "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0_test.csv",
pollutant_data_name = "nox",
year=2019,
pollutant="NOx")
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
library(raster)
library(sf)
library(tidyverse)
Startup()
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
setwd("~/GitHub")
library(devtools)
setwd("~/GitHub/PRAWNS")
document()
setwd("~/GitHub")
install_local("~/GitHub/PRAWNS")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
#call the startup function to load in all the packages needed
Startup()
#Check to see if the source object exists, create it if it doesnt
if (exists("Outputs/create_prawns_1_0_0_test")==FALSE){
create_prawns(raster_path= "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_path= list.files("Data/LSOA_statistics"),
key_variable = "LSOA19CD",
key_variable_aliases =c("LSOA.code..2011.","?..LSOA11CD"),
output_path="Outputs/create_prawns_2_0_0pm2.5_test.csv",
pollutant_data_name = "pm2_5",
year=2019,
pollutant="PM2.5")
}
prawn_path <-  "Outputs/create_prawns_1_0_0_test.csv"
long_chunk <- read.csv(prawn_path) %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
long_chunk <- read.csv(prawn_path)
long_chunk <- read.csv(prawn_path,check.names=FALSE) %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
long_chunk$Emission_source <- factor(long_chunk$Emission_source)
long_chunk$Emission_source <- factor(long_chunk$Emission_source)
factor(long_chunk$Emission_source)
long_chunk$Emission_source <- as.factor(long_chunk$Emission_source)
long_chunk <- long_chunk %>% mutate(Emission_source=fct_reorder(Emission_source,emissions,mean,.desc=TRUE))
long_chunk <- read.csv(prawn_path,check.names=FALSE) %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
View(long_chunk)
View(long_chunk)
long_chunk <- read.csv(prawn_path,check.names=FALSE) %>% tibble() %>% mutate(point_sources=Total-Total_no_points)#%>%
long_chunk <- read.csv(prawn_path,check.names=FALSE) %>% tibble() #%>% mutate(point_sources=Total-Total_no_points)%>%
long_chunk <- read.csv(file=prawn_path,check.names=FALSE) %>% tibble() #%>% mutate(point_sources=Total-Total_no_points)%>%
long_chunk <- read.csv(file=prawn_path,row.names=1,check.names=FALSE) %>% tibble() #%>% mutate(point_sources=Total-Total_no_points)%>%
long_chunk <- read.csv(file=prawn_path,row.names=1,check.names=FALSE) %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
long_chunk$Emission_source <- as.factor(long_chunk$Emission_source)
long_chunk <- long_chunk %>% mutate(Emission_source=fct_reorder(Emission_source,emissions,mean,.desc=TRUE))
faceted_sources <- ggplot(data=long_chunk
)+
aes(x=IMD,
y=emissions
)+
facet_wrap(~Emission_source,
scale="free_y"
)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))
faceted_sources
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
faceted_sources(prawn_path,"NOx")
hmm <- faceted_sources(prawn_path,"NOx")
hmm
hmm
output <- ggplot(data=long_chunk
)+
aes(x=IMD,
y=emissions
)+
facet_wrap(~Emission_source,
scale="free_y"
)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))+
labs(x=paste0("IMD decile where 10 is least deprived"),
y=paste0(pollutant," emissions"),
title=title
)
pollutant <- "NOx"
output <- ggplot(data=long_chunk
)+
aes(x=IMD,
y=emissions
)+
facet_wrap(~Emission_source,
scale="free_y"
)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))+
labs(x=paste0("IMD decile where 10 is least deprived"),
y=paste0(pollutant," emissions"),
title=title
)
output
output <- ggplot(data=long_chunk
)+
aes(x=IMD,
y=emissions
)+
facet_wrap(~Emission_source,
scale="free_y"
)+
geom_line(stat="summary",aes(linetype="Mean")
)+
geom_smooth(method="lm",formula=y~x,se=FALSE,show.legend=FALSE,aes(linetype="Mean"))+
#Plot the line of best fit for the median
geom_quantile(quantiles=0.5,
aes(linetype="Median"),
size =1)+
#Plot a line through the medians for each decile
geom_line(stat="summary",fun=median,aes(linetype="Median"))+
labs(x=paste0("IMD decile where 10 is least deprived"),
y=paste0(pollutant," emissions"),
title="title"
)
output
source("~/.active-rstudio-document")
hmm <- faceted_sources(prawn_path,"NOx")
hmm
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/GitHub/PRAWNS/R/source_summary.R")
aha <- source_summary(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/source_summary.R")
aha <- source_summary(prawn_path,"NOx",2019)
aha
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
ggsave(filename= paste0(proc_tag,"/",pollutant," source summary.png"),
plot=source_breakdown,
device="png")
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",version)
year <- 2019
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",version)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(paste0(pollutant,"_emissions_in_",year,"_v",version))
paste0(pollutant,"_emissions_in_",year,"_v",version)
iteration <- 0.2.1
iteration <- "0.2.1"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(pollutant,"_emissions_in_",year,"_v",iteration))
write.csv(x =
create_prawns(raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant),
file = prawn_path)
raster_path <-  "Data/NOx_rasters_2019"
shapefile_path <- "Data/2011_LSOA_shapefile_20m_generalised"
data_path <-  list.files("Data/LSOA_statistics")
write.csv(x = create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant),
file = prawn_path
)
pollutant_data_name <- "nox"
write.csv(x = create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant),
file = prawn_path
)
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
Startup()
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
select(long_chunk,-FID)
dplyr::select(long_chunk,-FID)
4
source("~/GitHub/PRAWNS/R/create_prawns.R")
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_path),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
ggsave(filename= paste0(proc_tag,"/",pollutant," source summary.png"),
plot=source_breakdown,
device="png")
#Make and save a graph where the sources are all faceted
source_facets <- faceted_sources(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted sources.png"),
plot=source_facets,
device="png")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC breakdown.png"),
plot=RUC_breakdown,
device="png")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
source("~/GitHub/PRAWNS/R/RUC_IMD.R")
source("~/GitHub/PRAWNS/R/RUC_IMD.R")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC breakdown.png"),
plot=RUC_breakdown,
device="png")
RUC_breakdown
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC breakdown.png"),
plot=RUC_breakdown[[1]],
device="png")
ggsave(filename= paste0(proc_tag,"/",pollutant," RUC populationbreakdown.png"),
plot=RUC_breakdown[[2]],
device="png")
#Facet the mean and median pollutantlevels by city
city_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by city.png"),
plot=city_facets,
device="png")
#Facet the mean and median pollutant levels by county/unitary authority
area_facets <- faceted_plot(prawn_path = prawn_path,
group= "TCITY15NM",
pollutant = pollutant)
ggsave(filename= paste0(proc_tag,"/",pollutant," faceted by area.png"),
plot=area_facets,
device="png")
#Plot the average pollutant vs average IMD grouped by county/ua
avg_imd_pol <- area_IMD_vs_pol(prawn_path=prawn_path,
pollutant = pollutant,
area_type = "Area")
ggsave(filename= paste0(proc_tag,"/",pollutant," average vs average IMD by area.png"),
plot=avg_imd_pol,
device="png")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
deciles=c(1,10))
write.csv(x=numbers,
file=paste0(proc_tag,"/differnce between deciles.csv"))
source("~/GitHub/PRAWNS/R/bulk_processor.R")
source("~/GitHub/PRAWNS/R/bulk_processor.R")
source("~/GitHub/PRAWNS/R/bulk_processor.R")
bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx")
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_2",
year = 2019,
pollutant = "PM2.5")
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5")
source("~/GitHub/PRAWNS/R/RUC_IMD.R")
#Make and save a graph showing IMD based inequality for each RUC code
RUC_breakdown <- RUC_IMD(prawn_path = prawn_path,
pollutant=pollutant)
RUC_breakdown[[1]]
source("~/GitHub/PRAWNS/R/source_summary.R")
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
source_breakdown
source("~/GitHub/PRAWNS/R/Startup.R")
Startup()
c(1:3)
source("~/GitHub/PRAWNS/R/bulk_processor.R")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.3.0")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.3.0")
source("~/GitHub/PRAWNS/R/bulk_processor.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.3.0")
index <- 1
raster_path <- "Data/pm2.5_rasters_2019"
shapefile_path <-  "Data/2011_LSOA_shapefile_20m_generalised"
data_folder <-  "Data/LSOA_statistics"
pollutant_data_name <-  "pm2_5"
year <-  2019
pollutant <-  "PM2.5"
iteration <- "0.3.0"
#Create the folder for the results using the raw data
if (index==1){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#create the base prawn for this function, it will also be used by iterations 2 and 3 but filtered
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_folder),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
}
#Create the folder for the results using the raw data
if (index==1){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#create the base prawn for this function, it will also be used by iterations 2 and 3 but filtered
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_folder),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
}
source("~/GitHub/PRAWNS/R/create_prawns.R")
#Create the folder for the results using the raw data
if (index==1){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#create the base prawn for this function, it will also be used by iterations 2 and 3 but filtered
create_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
data_path= list.files(data_folder),
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
}
#create the results without London,
if (index==2){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration,"/Londonless")
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#Create the filtered data without London and save it at prawn_path
londonless_prawn <- read.csv(raw_path) %>%
tibble() %>%
filter(TCITY15NM!="London")
#Write the filtered prawn
write.csv(x = londonless_prawn,
file=prawn_path)
}
if (index==3){
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration,"/na is 0")
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#Create the filtered data without London and save it at prawn_path
na_0_prawn <- read.csv(raw_path) %>%
tibble() %>%
replace(is.na(.),0)
write.csv(x = na_0_prawn,
file=prawn_path)
}
#Make and save a graph showing a summary of the pollutants
source_breakdown <- source_summary(prawn_path=prawn_path,
pollutant=pollutant,
year=year)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
