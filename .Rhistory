labs(x= paste0(pollutant," emissions"),
y= paste0("Fraction exposed to at least this much ",pollutant),
title=paste0(" Cumulative distribution  of ",pollutant," emissions"))+
scale_y_continuous(
expand = expansion(mult=0,add=0),
)+
scale_x_discrete(
expand = expansion(mult=0,add=0),
)
city_freq
#Create a pivoted copy of the data so the sources can be graphed as separate variables
long_chunk <- filtered_data %>% tibble() %>% mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
long_chunk$Emission_source <- factor(long_chunk$Emission_source)
long_chunk <- long_chunk %>% mutate(Emission_source=fct_reorder(Emission_source,emissions,mean,.desc=TRUE))
city_sources <- Decile_vs_emission_by_variable(
active_stack = long_chunk,
chosen_decile = IMD,
chosen_grouping = Emission_source,
xaxis = "IMD Decile",
yaxis = "NOx emissions",
title = paste0("Source breakdown for ",targets),
chosen_variable = emissions
)+
geom_quantile(quantiles=0.5,linetype=2)
#Create the gridded oputput object
output <- ggarrange(Decile_distribution,Pollutant_distribution,City_histogram,City_profile,city_sources,city_freq,nrow=3,ncol=2) %>%
annotate_figure(top=text_grob(paste0("Summary of ",pollutant," exposure in ",targets)))
output
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- as.character(packageVersion("PRAWNS"))
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/0_7_1 tests.R")
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
if (file.exists(output_path)) {
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
} else {
dir.create(output_path)
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
}
output_path <-  paste0("Outputs/",pollutant," emissions in ",city,".png")
if (output_path!=FALSE){
if (file.exists(output_path)) {
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
} else {
dir.create(output_path)
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
}
}
targets <- "York"
if (output_path!=FALSE){
if (file.exists(output_path)) {
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
} else {
dir.create(output_path)
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
}
}
index <- 1
if (file.exists(output_path)) {
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
} else {
dir.create(output_path)
ggsave(filename=paste0(output_path,"/Nox in ",targets[index]),
plot=last_plot(),
units = "mm",height = 160,width=160,
device="png")
}
paste0(output_path,"/Nox in ",targets[index])
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- as.character(packageVersion("PRAWNS"))
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
pollutant=pollutant
)
city <- "York"
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- as.character(packageVersion("PRAWNS"))
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
area_summary(prawn_path = paste0(proc_tag,"/PRAWN.csv"),
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
targets = city,
pollutant=pollutant
)
ggsave(filename= paste0(proc_tag,"/emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 4500,
width=4500,
device="png")
targets <- "the moon"
#Reads in the demographic and pollution data
raw_data <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>% tibble()
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- as.character(packageVersion("PRAWNS"))
prawn_path <- paste0(proc_tag,"/PRAWN.csv"
)
#Reads in the demographic and pollution data
raw_data <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>% tibble()
#Reads in the shapefiles
raw_shapefile <- st_read(shapefile_path)
shapefile_path <-  "Data/2011_LSOA_shapefile_20m_generalised"
#Reads in the shapefiles
raw_shapefile <- st_read(shapefile_path)
#Takes the subset of the data where the city name matches the targets
filtered_data <- filter(raw_data,TCITY15NM %in% targets)
nrows(filtered_data)
dim(filtered_data)
if (dim(filtered_data)[1]==0){
stop(paste0("Nothing matches " ,targets," in the data, check for typos"))
}
source("~/GitHub/PRAWNS/R/bulk_processor.R")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
setwd("~/Github/PRAWNS")
use_vignette("data_flagger")
use_vignette("shapefile_checker")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/0_7_1 tests.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/tap report.R")
warnings()
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/tap report.R")
#recreate the folder name
pollutant <- "PM2.5"
#recreate the folder name
pollutant <- "PM2.5"
year <- 2019
iteration <- "TAP report"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
proc_tag
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/tap report.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/supervisor_meeting_tech_demo_remastered.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/0_7_4 tests.R")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/PRAWNS/R/gradient_pie.R")
gradient_pie("PM2.5","PM2.5_emissions_in_2019_v0.7.4/difference between deciles.csv")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/0_7_4 tests.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
setwd("~/Github/PRAWNS")
document()
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
#The startup section
library(PRAWNS)
setwd("~/GitHub/Scotland")
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scotland_LSOA_shapefiles",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process PM2.5
bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scotland_LSOA_shapefiles",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
test <- create_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scotland_LSOA_shapefiles",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
create_prawns(raster_path=)
)
test
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
#Process PM2.5
bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
test <- create_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
setwd("~/GitHub/Scotland")
test <- create_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
test
raster_path <- "Data/2020_NOx"
shapefile_path <- "Data/Scottish_data_zones"
pollutant_data_name <- "nox"
year<-2020
pollutant <- "NOx"
#Create a list of all the raster files present in the folder specified by raster_path
filelist <- list.files(raster_path,
pattern = ".asc",
full.names = TRUE)
#Store the rasters as a stack
source_stack <- rast(filelist[1])
for(index in 2:length(filelist)){
source_stack <- c(source_stack,rast(filelist[index]))
}
#Read the shapefile
LSOA_shapefile <- vect(shapefile_path)
plot(LSOA_shapefile)
#Calculate the average for each polygon in the shapefile
index <-  c(1:length(LSOA_shapefile))
transient <- sf::st_as_sf(LSOA_shapefile[index])
pollution_mean <- exact_extract(source_stack,transient,'mean')
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
test
thing <- test$Data_Zone %>% ntile(10)
thing
aha <- read.csv("Data/SIMD+2020v2+-+ranks")
setwd("~/GitHub/Scotland")
aha <- read.csv("Data/SIMD+2020v2+-+ranks")
aha <- read.csv("Data/SIMD+2020v2+-+ranks.csv")
aha
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
test
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
# Combine the pollution means with the additional data --------------------
refined_chunk <- read.csv("Data/SIMD+2020v2+-+ranks.csv") %>% tibble()
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
test
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
test$SIMD_decile
test$SIMD2020v2_Rank
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/Scotland/Scripts/Scotland0.8.0.R")
#Process NOx
scotttish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
last_error()
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
iteration <- "0.8.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
read.csv(file=prawn_path,
row.names=1,
check.names=FALSE)
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE)
long_chunk %>% tibble()
testing <- long_chunk %>% tibble()
renamer <- function(data,last_two_digits_year,pollutant_data_name){
# Rename the columns for readability --------------------------------------
NamedList <- c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Total_no_points","Waste treatment and disposal")
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
#Finds the first position where matches start
starter <- detect_index(tracer,is_true)-1
for(index in 1:length(tracer)){
if(tracer[index] == TRUE){
colnames(data)[index] <- NamedList[index-starter]
}}
data
}
hunter <- read.csv(NOx_emissions_in_2020_v0.8.0/crude_PRAWN.csv)
hunter <- read.csv("NOx_emissions_in_2020_v0.8.0/crude_PRAWN.csv")
hunted <- renamer(hunter,20,"nox")
hunted
hunter$mean.wastenox20
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
last_two_digits_year <- 20
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
tracer
data <- hunter
tracer <- colnames(data) %in% Nmdlst
tracer
Nmdlst
detect_index(tracer,is_true)-1
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/Scotland/Scripts/Scotland0.8.0.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
last_error()
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
