linear_fit$IMD
hmm <- linear_fit %>% tidy(model)
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=long_data)) %>%
tidy(model)
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=long_data %>% ungroup(IMD))) %>%
tidy(model)
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=(long_data %>% ungroup(IMD)))) %>%
tidy(model)
#create a linear model for use in the next part
linear_fit <-do(model=lm(emissions~IMD, data=long_data)) %>%
tidy(model)
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=.)) %>%
tidy(model)
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=.)) %>%
tidy()
#create a linear model for use in the next part
linear_fit <- long_data %>%
do(model=lm(emissions~IMD, data=.)) %>%
tidy()
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(model=lm(emissions~IMD, data=.)) %>%
tidy()
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(model=lm(emissions~IMD, data=.)) #%>%
View(linear_fit)
linear_fit
tidy(linear_fit)
tidy(linear_fit[1])
tidy(linear_fit[1,1])
tidy(linear_fit[1,2])
lm(formula=emissions~IMD, data=.))
lm(formula=emissions~IMD, data=.)
lm(formula=emissions~IMD, data=long_data))
lm(formula=emissions~IMD, data=long_data)
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(tidy(lm(formula=emissions~IMD, data=long_data))) #%>%
linear_fit
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(tidy(lm(formula=emissions~IMD, data=long_data))) %>%
pivot_wider(names_from = term)
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(tidy(lm(formula=emissions~IMD, data=long_data))) #%>%
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(tidy(lm(formula=emissions~IMD, data=long_data))) %>%
pivot_wider(names_from = term, values_from = estimate)
linear_fit
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(tidy(lm(formula=emissions~IMD, data=long_data))) #%>%
linear_fit
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(lm(formula=emissions~IMD, data=long_data)) #%>%
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(mod=lm(formula=emissions~IMD, data=long_data)) #%>%
linear_fit
tidy(linear_fit)
tidy(linear_fit$mod[2])
tidy(linear_fit$mod)
linear_fit$mod
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source,IMD) %>%
mutate(emissions=replace_na(emissions,0))
#create a linear model for use in the next part
linear_fit <- long_data %>% ungroup(IMD) %>%
do(mod=lm(formula=emissions~IMD, data=long_data)) #%>%
linear_fit
linear_fit$mod
setwd("~/GitHub/PRAWNS")
library(rmarkdown)
install.packages(pandoc)
install.packages("pandoc")
library(knitr)
usethis::use_vignette("my-vignette")
usethis::use_vignette("bulk_processor-vignette")
group_split(long_data)
group_split(long_data %>% ungroup(IMD))
hmm <- group_split(long_data %>% ungroup(IMD))
group_keys(long_data)
group_keys(long_data %>% ungroup(IMD))
names(hmm) <- group_keys(long_data %>% ungroup(IMD))
length(names(hmm))
names(hmm)
#jerry rig a fix to do(lm()) not wnting to work
fragments <- long_data %>%
ungroup(IMD) %>%
group_split()
fragments[1]
fragments[2]
fragments[[1]]
fragments[[2]]
fragments[[2]]$Total_no_points
head(fragments[[2]]$Total_no_points)
head(fragments[[1]]$Total_no_points)
head(fragments[[1]]$Agricultural)
head(fragments[[7]]$Total_no_points)
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#jerry rig a fix to do(lm()) not wnting to work
fragments <- long_data %>%
group_split()
head(fragments[[7]]$Total_no_points)
head(fragments[[1]]$Total_no_points)
head(fragments[[1]]$emissions)
head(fragments[[5]]$emissions)
head(fragments[[4]]$emissions)
for (index in c(1:length(fragments))){
if (index==1){
binding <- lm(formula=emissions~IMD,data=fragments[[index]])
}else{
binding <- rbind(binding,lm(formula=emissions~IMD,data=fragments[[index]]))
}
}
binding
index <- 1
binding <- lm(formula=emissions~IMD,data=fragments[[index]])
binding
tidy(binding4)
tidy(binding)
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]]))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
}
binding
pivot_wider(binding,values_from=term)
binding <- pivot_wider(binding,
names_from=term,
values_from=estimate)
binding
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]]))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- pivot_wider(binding,
names_from=term,
values_from=estimate)
}
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#get the summary stats for deciles 1 and 10
point_summary <- filter(long_data, IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))
#jerry rig a fix to do(lm()) not wnting to work
fragments <- long_data %>%
group_split()
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]]))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- pivot_wider(binding,
names_from=term,
values_from=estimate)
}
View(binding)
binding
View(shard)
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(binding,
names_from=term,
values_from=estimate)
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=estimate)
View(shard)
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]]))
wide <- shard %>%
pivot_wider(names_from=term,
values_from=estimate)
View(wide)
View(shard)
class(shard)
class(wide)
View(wide)
shard$term
wide <- shard %>%
pivot_wider(names_from=term,
values_from=estimate,p.value,std.error,statistic)
shard$statistic
wide <- shard %>%
pivot_wider(names_from=term,
values_from=estimate,p.value,std.error,statistic)
wide <- shard %>%
pivot_wider(names_from=term,
values_from=estimate,p.value,std.error)
wide <- shard %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
View(wide)
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- pivot_wider(binding,
names_from=term,
values_from=c(estimate))
}
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
}
View(binding)
binding <- mutate(binding,Source=group_keys(long_data))
binding
binding$Source
View(point_summary)
binding$Source
point_summary$Emission_source
amalgm <- inner_join(point_summary,binding,by=Emission_source)
amalgm <- inner_join(point_summary,binding,by="Emission_source")
binding <- mutate(binding,Emission_source=group_keys(long_data))
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
}
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
}
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
}
binding <- rbind(binding,shard)
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- rbind(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
}
inex <- 2
index <- 2
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
View(shard)
for (index in c(1:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
if (index==1){
binding <- shard
}else{
binding <- bind_rows(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
}
binding <- bind_rows(binding,shard)
index_2
index <- 2
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
for (index in c(2:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
}
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
for (index in c(2:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
}
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[1]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- shard
for (index in c(2:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
}
binding <- mutate(binding,Emission_source=group_keys(long_data))
amalgm <- inner_join(point_summary,binding,by="Emission_source")
binding <- mutate(binding,Emission_source=group_keys(long_data) %>% tibble())
amalgm <- inner_join(point_summary,binding,by="Emission_source")
class(binding$Emission_source)
class(point_summary$Emission_source)
binding <- mutate(binding,Emission_source=as.character(group_keys(long_data)))
amalgm <- inner_join(point_summary,binding,by="Emission_source")
as.character(group_keys(long_data)
as.character(group_keys(long_data))
as_character(group_keys(long_data))
group_keys(long_data)
group_keys(long_data)[1]
class(group_keys(long_data)[1])
class(pull(group_keys(long_data)[1]))
binding <- mutate(binding,Emission_source=pull(group_keys(long_data)))
amalgm <- inner_join(point_summary,binding,by="Emission_source")
View(amalgm)
View(amalgm)
View(point_summary)
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))
View(point_summary)
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))
group_by(long_data,IMD)
deciles
View(point_summary)
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))
View(point_summary)
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
pivot_wider(names_from=Emission_source,values_from=c(mean,median))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
pivot_wider(names_from=IMD,values_from=c(mean,median,Emission_source))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))# %>%
View(point_summary)
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions))# %>%
hmm <- point_summary %>% pivot_wider(names_from=IMD,values_from=c(mean,median,Emission_source))
View(hmm)
View(point_summary)
hmm <- point_summary %>% pivot_wider(names_from=IMD,values_from=c(mean,median))
View(hmm)
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
#Make the data wide so the summary columns can be calculated
pivot_wider(names_from=IMD,values_from=c(mean,median))# %>%
View(point_summary)
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% deciles) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
#Make the data wide so the summary columns can be calculated
pivot_wider(names_from=IMD,values_from=c(mean,median)) %>%
#calculate the flat and % differences between the deciles
mutate(mean_flat_difference=mean_10-mean_1,
mean_percentage_differnce=mean_flat_difference/mean_1,
median_flat_difference=median_10-median_1,
median_percentage_differnce=median_flat_difference/median_1,)
View(point_summary)
View(amalgm)
for (index in c(2:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
}
binding <- mutate(binding,Emission_source=pull(group_keys(long_data))) #%>%
View(binding)
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[1]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- shard
for (index in c(2:length(fragments))){
shard <- tidy(lm(formula=emissions~IMD,data=fragments[[index]])) %>%
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic))
binding <- bind_rows(binding,shard)
}
binding <- mutate(binding,Emission_source=pull(group_keys(long_data))) #%>%
binding
