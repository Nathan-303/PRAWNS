flat_mean_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
#create a linear model for use in the next part
med_fit <- meds %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_mean_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
#calculate the median for each decile
meds <- long_data  %>% group_by(IMD,Emission_source) %>%
summarise(median=median(emissions))
meds$median
#create a linear model for use in the next part
med_fit <- meds %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))#%>%
med_fit
#create a linear model for use in the next part
med_fit <- meds %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_mean_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
#create a linear model for use in the next part
med_fit <- meds %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_median_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
med_fit
med_fit$percentage_median_regression
library(PRAWNS)
Startup()
prawn_path <- "PM2.5_emissions_in_2019_v0.3.0/PRAWN.csv"
data <- read.csv(prawn_path,
row.names=1,
check.names=FALSE)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
data <- read.csv(prawn_path,
row.names=1,
check.names=FALSE)
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% c(1,10)) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
#Make the data wide so the summary columns can be calculated
pivot_wider(names_from=IMD,values_from=c(mean,median)) %>%
#calculate the flat and % differences between the deciles
mutate(mean_flat_difference=mean_10-mean_1,
mean_percentage_differnce=mean_flat_difference/mean_1,
median_flat_difference=median_10-median_1,
median_percentage_differnce=median_flat_difference/median_1,)
#
mean_regression <- long_data %>% do(tidy(lm(emissions~IMD, data=.))) %>%
#pivot out the stats so each source is on one row
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic)) %>%
#rename the columns to avoid confusion
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(mean_line_1=intercept+gradient,
mean_line_10=intercept+10*gradient,
flat_mean_regression_differnce=mean_line_10-mean_line_1,
percentage_mean_regression=flat_mean_regression_differnce/mean_line_1)
#calculate the median for each decile
median_values <- long_data  %>% group_by(IMD,Emission_source) %>%
summarise(median=median(emissions))
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_median_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
#Meld all three point values
output1 <- inner_join(point_summary,mean_regression,by="Emission_source") %>%
inner_join(median_regression,by="Emission_source")
View(output1)
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.4.0")
library(PRAWNS)
setwd("~/Github/PRAWNS")
document()
setwd("~/Github/PRAWNS")
document()
.rs.restartR()
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
setwd("~/Github/PRAWNS")
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.4.0")
raster_path <- "Data/pm2.5_rasters_2019"
shapefile_path <-  "Data/2011_LSOA_shapefile_20m_generalised"
data_folder <-  "Data/LSOA_statistics"
pollutant_data_name <-  "pm2_5"
year <-  2019
pollutant <-  "PM2.5"
iteration <- "0.4.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
paste0(proc_tag,"/differnce between deciles.csv"))
paste0(proc_tag,"/differnce between deciles.csv")
input_path <- "PM2.5_emissions_in_2019_v0.4.0/differnce between deciles.csv"
raw <- read.csv(input_path,
row.names=1,
check.names=FALSE)
total_diff <-   raw %>% filter(Emission_source=="Total")
View(total_diff)
total_diff <-   raw %>% filter(Emission_source=="Total") %>% select(mean_flat_difference)
View(total_diff)
total_diff <-   raw %>%
filter(Emission_source=="Total") %>%
select(mean_flat_difference) %>%
as.numeric()
percentage_diffs <- tibble(Emission_source=raw$Emission_source,
delta_percent=raw$mean_flat_difference/total_diff)
View(percentage_diffs)
ggplot(data=raw,
aes(x="",
y=mean_flat_difference,
fill=Emission_source))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=Emission_source))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=fct_reorder(mean_flat_difference),
fill=Emission_source))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source)))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_differnce)))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")
ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")+
scale_fill_viridis_d()
output <- ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")+
scale_fill_viridis_d()+
labs(title = paste0("How each source of ",pollutant," contributes to the inequality gradient"))
pollutant <- PM2.5
pollutant <- "PM2.5"
output <- ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")+
scale_fill_viridis_d()+
labs(title = paste0("How each source of ",pollutant," contributes to the inequality gradient"))
output
source("~/GitHub/PRAWNS/R/gradient_pie.R")
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
raw <- read.csv(input_path,
row.names=1,
check.names=FALSE)
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
write.csv(x=numbers,
file=paste0(proc_tag,"/difference between deciles.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
write.csv(x=pie,
file=paste0(proc_tag,"/pie chart of source contributions to the gradient.csv"))
#extract the difference as a flat number
total_diff <-   raw %>%
filter(Emission_source=="Total") %>%
select(mean_flat_difference) %>%
as.numeric()
percentage_diffs <- tibble(Emission_source=raw$Emission_source,
delta_percent=raw$mean_flat_difference/total_diff)
output <- ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")+
scale_fill_viridis_d()+
labs(title = paste0("How each source of ",pollutant," contributes to the inequality gradient"))
output
source("~/GitHub/PRAWNS/R/gradient_pie.R")
output <- ggplot(data=raw %>% filter(Emission_source!="Total"),
aes(x="",
y=mean_flat_difference,
fill=fct_reorder(Emission_source,mean_flat_difference)))+
geom_col()+
coord_polar(theta="y")+
scale_fill_viridis_d()+
labs(title = paste0("How each source of ",pollutant," contributes to the inequality gradient"))
output
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
write.csv(x=pie,
file=paste0(proc_tag,"/pie chart of source contributions to the gradient.csv"))
pie <- gradient_pie(pollutant = pollutant,
#The input path is the same as the output file for numbers
input_path=paste0(proc_tag,"/difference between deciles.csv"))
ggsave(filename= paste0(proc_tag,"/pie chart of how ",pollutant," sources contribute to the inequality gradient.png"),
plot=pie,
device="png")
library(PRAWNS)
setwd("~/Github/PRAWNS")
document()
rm(list = ls())
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
#Load the package
library(PRAWNS)
#Set the working directory so the filepaths are correct
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
#Load all the dependencies
Startup()
#Process PM2.5
bulk_processor(raster_path = "Data/pm2.5_rasters_2019",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
data_folder = "Data/LSOA_statistics",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5",
iteration="0.4.3")
raster_path <-  "Data/pm2.5_rasters_2019"
shapefile_path <- "Data/2011_LSOA_shapefile_20m_generalised"
data_folder <- "Data/LSOA_statistics"
pollutant_data_name <- "pm2_5"
year <- 2019
pollutant <- "PM2.5"
iteration<-"0.4.3"
#Process PM2.5
bulk_processor(raster_path = raster_path,
shapefile_path = shapefile_path,
data_folder = data_folder,
pollutant_data_name = pollutant_data_name,
year = year,
pollutant = pollutant,
iteration=iteration)
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
pollutant=pollutant
)
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
pollutant=pollutant
)
city <- "Coventry"
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
pollutant=pollutant
)
source("~/GitHub/PRAWNS/R/city_summary.R")
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
pollutant=pollutant
)
source("~/GitHub/PRAWNS/R/city_summary.R")
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
pollutant=pollutant
)
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".csv"),
plot=last_plot(),
device="png")
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "mm",
height = 160,
width=160,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "mm",
height = 16000,
width=16000,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "mm",
height = 1600,
width=1600,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "pixels",
height = 1600,
width=1600,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 1600,
width=1600,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 16000,
width=16000,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 1600,
width=1600,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 9000,
width=9000,
device="png")
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 4500,
width=4500,
device="png")
city <- "Milton Keynes"
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 4500,
width=4500,
device="png")
#Process any city
city_summary(prawn_path = prawn_path,
shape_path = shapefile_path,
targets = city,
output_path= paste0("Outputs/",pollutant," emissions in ",city,".png"),
pollutant=pollutant
)
ggsave(filename= paste0("Outputs/",pollutant," emissions in ",city,".png"),
plot=last_plot(),
units = "px",
height = 4500,
width=4500,
device="png")
library(devtools)
library(roxygen2)
setwd("~/Github/PRAWNS")
document()
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
library(PRAWNS)
detach("package:PRAWNS", unload = TRUE)
detach("package:PRAWNS", unload = TRUE)
install.packages("~/Github/PRAWNS", repos=NULL, type="source")
