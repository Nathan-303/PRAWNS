bulk_processor(raster_path = "Data/NOx_rasters_2020",
shapefile_path = "Data/2011_LSOA_shapefile_20m_generalised",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
library(PRAWNS)
Startup()
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
data <- read.csv("NOx_emissions_in_2020_v0.8.0/PRAWN.csv")
ggplot(data=data$Total)+geom_histogram()
ggplot(data=data)+aes(x=Total)+geom_histogram()
ggplot(data=data)+
aes(x=Total)+
geom_histogram()+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 20)+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 10)+
coord_cartesian(xlim=c(0,200),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 10)+
coord_cartesian(xlim=c(0,120),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
coord_cartesian(xlim=c(0,120),expand=FALSE)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
coord_cartesian(xlim=c(0,120))
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = FALSE)+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5)+
scale_x_continuous(limits = c(-5,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
data$Total<=0
sum(data$Total<=0)
sum(data$Total<=5)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5,boundary=0)+
scale_x_continuous(limits = c(-5,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/nox distribution.R")
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = c(0,20,40,60,80,100,120),expand = c(0,0))+
theme(axis.ticks.y = )
?seq()
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
theme(axis.ticks.y = )
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
facet_wrap(facets = IMD)
ggplot(data=data)+
aes(x=Total)+
geom_histogram(binwidth = 2.5,boundary=0)+
scale_x_continuous(limits = c(0,120),breaks = seq(from=0,to=120, by = 10),expand = c(0,0))+
facet_wrap(~IMD)
library(PRAWNS)
Startup()
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
year <- 2020
pollutant <- "NOx"
iteration <- "0.8.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
RUC_IMD_targeted(prawn_path,"NOx")
prawn_path
prawn_path <- "NOx_emissions_in_2020_v0.8.0/Londonless/PRAWN.csv"
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
last_error()
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
RUC_IMD_targeted(prawn_path,"NOx")
#Read in the data with NA valuse changed to unclassified, raising red flags if necessary
active_stack <-read.csv(prawn_path) %>%
replace_na(list(RUC11="Unclassified"))
shaper <- active_stack %>% group_by(IMD)
shaper <- active_stack %>% group_by(RUC11) %>% summarise(mean=mean(IMD))
View(shaper)
shaper <- active_stack %>% group_by(RUC11) %>% summarise(mean=mean(IMD),mode=mode(IMD),median=median(IMD))
View(shaper)
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
pollutant <- "NOx"
year <- 2020
iteration <- "0.8.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
library(PRAWNS)
Startup()
setwd("~/GitHub/Data-analysis-with-PRAWNS-demo")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
data <- read.csv(prawn_path,
row.names=1,
check.names=FALSE)
#make the data long so the sources can be processed separately
long_data <- data %>% pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","Point sources"),
names_to = "Emission_source",
values_to = "emissions") %>%
group_by(Emission_source) %>%
mutate(emissions=replace_na(emissions,0))
#get the summary stats for deciles 1 and 10
point_summary <- filter(group_by(long_data,IMD,Emission_source), IMD %in% c(1,10)) %>%
#add grouping for summarise
#group_by(IMD) %>%
#calculate the mean and median for each decile
summarise(mean=mean(emissions),median=median(emissions)) %>%
#Make the data wide so the summary columns can be calculated
pivot_wider(names_from=IMD,values_from=c(mean,median)) %>%
#calculate the flat and % differences between the deciles
mutate(mean_flat_difference=mean_10-mean_1,
mean_percentage_differnce=mean_flat_difference/mean_1,
median_flat_difference=median_10-median_1,
median_percentage_differnce=median_flat_difference/median_1,)
#
mean_regression <- long_data %>% do(tidy(lm(emissions~IMD, data=.))) %>%
#pivot out the stats so each source is on one row
pivot_wider(names_from=term,
values_from=c(estimate,p.value,std.error,statistic)) %>%
#rename the columns to avoid confusion
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(mean_line_1=intercept+gradient,
mean_line_10=intercept+10*gradient,
flat_mean_regression_differnce=mean_line_10-mean_line_1,
percentage_mean_regression=flat_mean_regression_differnce/mean_line_1)
#calculate the median for each decile
median_values <- long_data  %>% group_by(IMD,Emission_source) %>%
summarise(median=median(emissions))
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic,
r.squared)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_median_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
View(median_values)
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))#%>%
median_regression
mlem <- lm(median~IMD,data=median_values)
mlem
mlem$residuals
mlem %>% tibble()
summary(mlem)
mleeeeem <- summary(mlem)
median_values
mlem <- lm(median~IMD,data=ungroup(x=median_values,IMD))
mlem
mlem <- do(summary(lm(median~IMD,data=ungroup(x=median_values,IMD))))
summary(mlem)
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))#%>%
#Get the r2 value through shenanigans
medarr <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(glance(lm(median~IMD, data=.)))
View(medarr)
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
medarr$r.squared
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
View(numbers)
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
cbind(medarr$r.squared) %>%
#calculate the intercepts
mutate(median_line_1=intercept+gradient,
median_line_10=intercept+10*gradient,
flat_median_regression_differnce=median_line_10-median_line_1,
percentage_median_regression=flat_median_regression_differnce/median_line_1)
numbers$...10
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
bind_cols(medarr$r.squared) #%>%
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
bind_cols(medarr$r.squaredp) %>% rename(R_squared="...10")
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
bind_cols(medarr$r.squaredp) #%>% rename(R_squared="...10")
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
bind_cols(medarr$r.squared) #%>% rename(R_squared="...10")
#create a linear model for use in the next part
median_regression <- median_values %>% ungroup(IMD) %>% group_by(Emission_source) %>%
#get the tabulated stats from regression on the median data
do(tidy(lm(median~IMD, data=.)))%>%
#pivot out the data so each source is on one line
pivot_wider(names_from=term,
values_from=c(estimate,
p.value,
std.error,
statistic)) %>%
#rename the columns to avoid issues
rename(intercept="estimate_(Intercept)", gradient=estimate_IMD
) %>%
bind_cols(medarr$r.squared) %>% rename(R_squared="...10")
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
View(numbers)
medarr$statistic
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
source("~/GitHub/PRAWNS/R/stat_wrangler.R")
#calculate and record the difference between the mean and median points and regression lines at deciles 1 and 10
numbers <- stat_wrangler(prawn_path = prawn_path,
)
numbers$R_squared
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
source("~/GitHub/PRAWNS/R/RUC_IMD_targeted.R")
source("~/GitHub/PRAWNS/R/RUC_IMD.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
library(PRAWNS)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
library(PRAWNS)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
library(PRAWNS)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
library(PRAWNS)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
last_error()
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R")
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/area_IMD_vs_pol.R")
area_IMD_vs_pol("NOx_emissions_in_2020_v0.8.3/PRAWN.csv","NOx",2020)
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/2020 compile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/6 10 22 compile.R")
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R", encoding = 'UTF-8')
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/6 10 22 compile.R")
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
source("~/GitHub/PRAWNS/R/faceted_sources.R")
faceted_sources("NOx_emissions_in_2020_v0.8.4/PRAWN.csv","NOx",2020)
area_type = "County/UA"
prawn_path <- "NOx_emissions_in_2020_v0.8.4/PRAWN.csv"
#Plot the average pollutant vs average IMD grouped by county/ua
avg_imd_pol <- area_IMD_vs_pol(prawn_path=prawn_path,
pollutant = pollutant,
area_type = "County/UA",
year=year)
avg_imd_pol
