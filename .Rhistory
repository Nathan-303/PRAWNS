thing
aha <- read.csv("Data/SIMD+2020v2+-+ranks")
setwd("~/GitHub/Scotland")
aha <- read.csv("Data/SIMD+2020v2+-+ranks")
aha <- read.csv("Data/SIMD+2020v2+-+ranks.csv")
aha
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx",
is_raw = TRUE)
test
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
# Combine the pollution means with the additional data --------------------
refined_chunk <- read.csv("Data/SIMD+2020v2+-+ranks.csv") %>% tibble()
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
test
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
test <- create_scottish_prawns(raster_path="Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year=2020,
pollutant = "NOx")
test$SIMD_decile
test$SIMD2020v2_Rank
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/Scotland/Scripts/Scotland0.8.0.R")
#Process NOx
scotttish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
last_error()
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
iteration <- "0.8.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE) %>%
tibble() %>%
mutate(point_sources=Total-Total_no_points)%>%
pivot_longer(
cols=c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Waste treatment and disposal","point_sources"),
names_to = "Emission_source",
values_to = "emissions")
read.csv(file=prawn_path,
row.names=1,
check.names=FALSE)
long_chunk <- read.csv(file=prawn_path,
row.names=1,
check.names=FALSE)
long_chunk %>% tibble()
testing <- long_chunk %>% tibble()
renamer <- function(data,last_two_digits_year,pollutant_data_name){
# Rename the columns for readability --------------------------------------
NamedList <- c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Total_no_points","Waste treatment and disposal")
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
#Finds the first position where matches start
starter <- detect_index(tracer,is_true)-1
for(index in 1:length(tracer)){
if(tracer[index] == TRUE){
colnames(data)[index] <- NamedList[index-starter]
}}
data
}
hunter <- read.csv(NOx_emissions_in_2020_v0.8.0/crude_PRAWN.csv)
hunter <- read.csv("NOx_emissions_in_2020_v0.8.0/crude_PRAWN.csv")
hunted <- renamer(hunter,20,"nox")
hunted
hunter$mean.wastenox20
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
last_two_digits_year <- 20
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
tracer
data <- hunter
tracer <- colnames(data) %in% Nmdlst
tracer
Nmdlst
detect_index(tracer,is_true)-1
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/2020_NOx",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
source("~/GitHub/Scotland/Scripts/Scotland0.8.0.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
last_error()
source("~/GitHub/Data-analysis-with-PRAWNS-demo/Scripts/recompile.R")
library(PRAWNS)
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
setwd("~/GitHub/Scotland")
Startup()
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2020,
pollutant = "NOx"
)
#The startup section
library(PRAWNS)
#Process NOx
scottish_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
source("~/GitHub/PRAWNS/R/NI_bulk_processor.R")
source("~/GitHub/PRAWNS/R/NI_bulk_processor.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
setwd("~/GitHub/Northern_Ireland")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
hmm <- vect(Data/NI_2011_SOAS)
hmm <- vect("Data/NI_2011_SOAS")
plot(hmm)
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
read.csv("Data/NIMDM17_SOAresults.csv") %>% tibble()
thing <- read.csv("Data/NIMDM17_SOAresults.csv") %>% tibble()
source("~/GitHub/PRAWNS/R/create_NI_prawns.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
source("~/GitHub/PRAWNS/R/NI_bulk_processor.R")
#Process NOx
NI_bulk_processor(raster_path = "Data/NOx_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "nox",
year = 2019,
pollutant = "NOx"
)
#Process NOx
NI_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/NI_2011_SOAS",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
setwd("~/GitHub/Scotland")
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
last_error()
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
raster_path <- "Data/2020_NOx"
shapefile_path <- "Data/Scottish_data_zones"
pollutant_data_name <- "nox"
year<-2020
pollutant <- "NOx"
#Create a list of all the raster files present in the folder specified by raster_path
filelist <- list.files(raster_path,
pattern = ".asc",
full.names = TRUE)
#Store the rasters as a stack
source_stack <- rast(filelist[1])
for(index in 2:length(filelist)){
source_stack <- c(source_stack,rast(filelist[index]))
}
#Read the shapefile
DZ_shapefile <- vect(shapefile_path)
#Calculate the average for each polygon in the shapefile
index <-  c(1:length(DZ_shapefile))
transient <- sf::st_as_sf(DZ_shapefile[index])
pollution_mean <- exact_extract(source_stack,transient,'mean')
#Output the results as a tibble containing the indexed position, the pollution mean and the LSOA code, a property from the shapefile that enables binding on LSOA statistics
output <- tibble(poll_mean=pollution_mean,
Data_Zone=DZ_shapefile$DataZone
) %>% unnest(poll_mean)
output
#output a csv wit the minimum processiong done if is.raw=true
if (is_raw==TRUE){
if(output_path!=FALSE){
write.csv(file=output_path,x = output
)}
output
}
else{
# Combine the pollution means with the additional data --------------------
refined_chunk <- read.csv("Data/SIMD+2020v2+-+ranks.csv") %>% tibble() %>%
#make a column with the deprivation decile
mutate(IMD=ntile(SIMD2020v2_Rank,10))
prawns <- inner_join(output,refined_chunk,by="Data_Zone")
renamer <- function(data,last_two_digits_year,pollutant_data_name){
# Rename the columns for readability --------------------------------------
NamedList <- c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Total_no_points","Waste treatment and disposal")
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
#Finds the first position where matches start
starter <- detect_index(tracer,is_true)-1
for(index in 1:length(tracer)){
if(tracer[index] == TRUE){
colnames(data)[index] <- NamedList[index-starter]
}}
data
}
prawns <- renamer(
data=prawns,
last_two_digits_year=year-2000,
pollutant_data_name = pollutant_data_name
) %>% mutate("Point sources"=Total-Total_no_points)
#Return the resulting object
# Output the results ------------------------------------------------------
if (output_path!=FALSE){
write.csv(prawns,
file=output_path)
}
prawns
}
raster_path <- "Data/PM2.5_rasters_2019"
shapefile_path <- "Data/Scottish_data_zones"
pollutant_data_name <- "pm2_5"
year<-2019
pollutant <- "PM2.5"
#Create a list of all the raster files present in the folder specified by raster_path
filelist <- list.files(raster_path,
pattern = ".asc",
full.names = TRUE)
#Store the rasters as a stack
source_stack <- rast(filelist[1])
for(index in 2:length(filelist)){
source_stack <- c(source_stack,rast(filelist[index]))
}
pollution_mean <- exact_extract(source_stack,transient,'mean')
#Output the results as a tibble containing the indexed position, the pollution mean and the LSOA code, a property from the shapefile that enables binding on LSOA statistics
output <- tibble(poll_mean=pollution_mean,
Data_Zone=DZ_shapefile$DataZone
) %>% unnest(poll_mean)
#output a csv wit the minimum processing done if is.raw=true
if (is_raw==TRUE){
if(output_path!=FALSE){
write.csv(file=output_path,x = output
)}
output
}
# Combine the pollution means with the additional data --------------------
refined_chunk <- read.csv("Data/SIMD+2020v2+-+ranks.csv") %>% tibble() %>%
#make a column with the deprivation decile
mutate(IMD=ntile(SIMD2020v2_Rank,10))
prawns <- inner_join(output,refined_chunk,by="Data_Zone")
renamer <- function(data,last_two_digits_year,pollutant_data_name){
# Rename the columns for readability --------------------------------------
NamedList <- c("Agricultural","Domestic combustion","Energy production",
"Industrial combustion","Industrial production","Natural",
"Offshore","Other transport and mobile machinery","Road transport","Solvents","Total"
,"Total_no_points","Waste treatment and disposal")
Nmdlst <- paste0("mean.",c("agric","domcom","energyprod","indcom","indproc","nature","offshore","othertrans","roadtrans","solvents","total","totarea","waste","pntsrc"),pollutant_data_name,last_two_digits_year)
tracer <- colnames(data) %in% Nmdlst
#Finds the first position where matches start
starter <- detect_index(tracer,is_true)-1
for(index in 1:length(tracer)){
if(tracer[index] == TRUE){
colnames(data)[index] <- NamedList[index-starter]
}}
data
}
prawns <- renamer(
data=prawns,
last_two_digits_year=year-2000,
pollutant_data_name = pollutant_data_name
) %>% mutate("Point sources"=Total-Total_no_points)
# Output the results ------------------------------------------------------
if (output_path!=FALSE){
write.csv(prawns,
file=output_path)
}
prawns
source("~/GitHub/PRAWNS/R/scottish_bulk_processor.R")
source("~/GitHub/PRAWNS/R/create_scottish_prawns.R")
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2020,
pollutant = "PM2.5"
)
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
iteration <- "0.8.0"
proc_tag <- paste0(pollutant,"_emissions_in_",year,"_v",iteration)
prawn_path <- paste0(proc_tag,"/PRAWN.csv")
#The base path remains unchanged and is used to fetch a raw copy of the prawn for processed versions
raw_path <- paste0(proc_tag,"/PRAWN.csv")
#The crude path is used to output the unrefined prawn
crude_path <- paste0(proc_tag,"/crude_PRAWN.csv")
#create the folder that everything goes in
dir.create(path=paste0(proc_tag))
#create the base prawn for this function, it will also be used by iterations 2 and 3 but filtered
create_scottish_prawns(
raster_path= raster_path,
shapefile_path = shapefile_path,
pollutant_data_name = pollutant_data_name,
year=year,
pollutant=pollutant,
output_path = prawn_path)
#Process NOx
scottish_bulk_processor(raster_path = "Data/PM2.5_rasters_2019",
shapefile_path = "Data/Scottish_data_zones",
pollutant_data_name = "pm2_5",
year = 2019,
pollutant = "PM2.5"
)
